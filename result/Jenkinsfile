pipeline {
  agent none
  stages{
    stage("build"){
      when{
        changeset "**/result/**"
      }
      agent{
        docker{
          image 'node:8.16.0-alpine'
        }
      }      
      steps{
        echo 'Compiling result app..'
        dir('result'){
          npm install
          npm audit fix  
      }
    }
  }
  stage("test"){
    when{
      changeset "**/result/**"
    }
    agent{
      docker{
          image 'node:8.16.0-alpine'

      }
    }
    steps{
      echo 'Running Unit Tests on result app..'
      dir('result'){
        npm start
      }
    }
  }
  stage("package"){
    when{
      branch 'master'
      changeset "**/result/**"
    }
    agent{
      docker{
          image 'node:8.16.0-alpine'

      }
    }
    steps{
      echo 'Packaging result app'
      dir('result'){
          image 'node:8.16.0-alpine'

        fingerprint: true
      }
    }
  }
  stage('docker-package'){
    agent any
    when{
      changeset "**/result/**"
      branch 'master'
    }
    steps{
      echo 'Packaging result app with docker'
      script{
        docker.withRegistry('https://index.docker.io/v1/','dockerlogin') {
          def resultImage =  docker.build(" ibrahimmohamedi/result:v${env.BUILD_ID}", "./result")
          resultImage.push()
          resultImage.push("${env.BRANCH_NAME}")
          resultImage.push("latest")
        }
      }
    }
  }
}
post{
  always{
    echo 'Building multibranch pipeline for result is completed..'
  }
}
}
